{"version":3,"sources":["Components/StopWatch/styles.js","services/format.js","Components/StopWatch/Laps/styles.js","Components/StopWatch/Laps/Line/styles.js","Components/StopWatch/Laps/Line/index.js","Components/StopWatch/Laps/index.js","styles/global.js","index.js","Components/StopWatch/index.js"],"names":["Container","styled","div","props","reseted","running","time","allSec","min","Math","floor","sec","msec","toFixed","substring","allData","totalTime","minutes","seconds","miliseconds","formatedTime","Scroll","PerfectScrollBar","color","lap","i","index","bestWorseLap","length","best","bestTime","bestIndex","worse","worseTime","worseIndex","Line","Laps","timeElapsed","newLap","className","id","format","map","l","lIndex","key","createGlobalStyle","ReactDOM","render","useState","isRunning","setIsRunning","newInterval","setNewInterval","setTimeElapsed","duration","setDuration","startTime","setStartTime","timer","setTimer","setLap","setNewLap","resetNewLap","setResetNewLap","setBestWorseLap","useEffect","setInterval","tElapsed","Date","now","bestLap","worseLap","lapReverse","reverse","forEach","type","onClick","clearInterval","document","getElementById"],"mappings":"qsDAEO,IAAMA,EAAYC,IAAOC,IAAV,KAiDQ,SAAAC,GAAK,MAAsB,OAAlBA,EAAMC,QAAmB,UAAY,aACzD,SAAAD,GAAK,MAAsB,OAAlBA,EAAMC,QAAmB,UAAY,aAEzB,SAAAD,GAAK,MAAsB,OAAlBA,EAAMC,QAAmB,UAAY,aAGxD,SAAAD,GAAK,MAAsB,OAAlBA,EAAMC,QAAmB,UAAY,aAClC,SAAAD,GAAK,MAAsB,OAAlBA,EAAMC,QAAmB,UAAY,aAO1D,SAAAD,GAAK,MAAsB,OAAlBA,EAAME,QAAmB,UAAY,aACzD,SAAAF,GAAK,MAAsB,OAAlBA,EAAME,QAAmB,UAAY,aAEzB,SAAAF,GAAK,MAAsB,OAAlBA,EAAME,QAAmB,UAAY,aCpEvE,WAASC,GACtB,IAAMC,EAASD,EAAO,IAChBE,EAAMC,KAAKC,MAAMH,EAAS,IAC1BI,EAAMF,KAAKC,MAAMH,EAAS,IAC1BK,GAAQL,EAAS,GAAGM,QAAQ,GAAGC,UAAU,GAE3CC,EAAU,CACZC,UAAWT,EACXU,QAAST,GAAO,GAAKA,EAAZ,WAAsBA,GAC/BU,QAASP,GAAO,GAAKA,EAAZ,WAAsBA,GAC/BQ,YAAaP,GAKf,OAFAG,EAAQK,aAAR,UAA0BL,EAAQE,QAAlC,YAA6CF,EAAQG,QAArD,YAAgEH,EAAQI,aAEjEJ,G,21BCZF,IAAMf,EAAYC,IAAOC,IAAV,KA4CTmB,EAASpB,YAAOqB,IAAPrB,CAAH,K,oGC7CZ,IAAMD,EAAYC,IAAOC,IAAV,KAET,SAAAC,GAAU,IAGboB,EAFIC,EAAgCrB,EAAhCqB,IAAYC,EAAoBtB,EAA3BuB,MAAUC,EAAiBxB,EAAjBwB,aAIvB,GAAIH,EAAII,OAAS,GAAKJ,EAAIC,GAAI,CAAC,IAAD,EACiBE,EAAaE,KAA5CC,EADc,EACpBxB,KAAuByB,EADH,EACJL,MADI,EAEmBC,EAAaK,MAA9CC,EAFc,EAEpB3B,KAAwB4B,EAFJ,EAEHR,MAErBF,EAAIC,GAAGC,QAAUK,GAAaP,EAAIC,GAAGnB,KAAKU,YAAcc,EAC1DP,EAAQ,UAGRC,EAAIC,GAAGC,QAAUQ,GACjBV,EAAIC,GAAGnB,KAAKU,YAAciB,IAE1BV,EAAQ,WAIZ,OAAOA,KCnBE,SAASY,EAAT,GAA6C,IAA7BT,EAA4B,EAA5BA,MAAOF,EAAqB,EAArBA,IAAKG,EAAgB,EAAhBA,aACzC,OACE,kBAAC,EAAD,CAAWD,MAAOA,EAAOF,IAAKA,EAAKG,aAAcA,GAC/C,2BACE,8BAAOH,EAAIE,IAAJ,cAAqBF,EAAIE,GAAOA,QACvC,8BAAOF,EAAIE,IAAJ,UAAiBF,EAAIE,GAAOpB,KAAKc,iBCHjC,SAASgB,EAAT,GAA2D,IAA3CC,EAA0C,EAA1CA,YAAab,EAA6B,EAA7BA,IAAKc,EAAwB,EAAxBA,OAAQX,EAAgB,EAAhBA,aACvD,OACE,kBAAC,EAAD,KACE,kBAACN,EAAD,KACE,uBAAGkB,UAAU,cACX,8BAAOF,EAAc,GAAd,cAA0Bb,EAAII,OAAS,IAC9C,0BAAMY,GAAG,gBACNH,EAAc,GAAK,8BAAOI,EAAOH,GAAQlB,gBAG9C,kBAACe,EAAD,CAAMT,MAAM,IAAIF,IAAKA,EAAKG,aAAcA,IACxC,kBAACQ,EAAD,CAAMT,MAAM,IAAIF,IAAKA,EAAKG,aAAcA,IACxC,kBAACQ,EAAD,CAAMT,MAAM,IAAIF,IAAKA,EAAKG,aAAcA,IAEvCH,EAAII,OAAS,GACZJ,EAAIkB,KACF,SAACC,EAAGC,GAAJ,OACEA,EAAS,GACP,kBAACT,EAAD,CACEU,IAAKF,EAAEjB,MACPA,MAAOkB,EACPpB,IAAKA,EACLG,aAAcA,S,sgBC1BjBmB,kBAAf,KCGAC,IAASC,OACP,oCACE,kBAAC,EAAD,MACA,mBCHW,WAAsB,IAAD,EACAC,oBAAS,GADT,mBAC3BC,EAD2B,KAChBC,EADgB,OAEIF,oBAAS,GAFb,mBAE3BG,EAF2B,KAEdC,EAFc,OAGIJ,mBAAS,GAHb,mBAG3BZ,EAH2B,KAGdiB,EAHc,OAIFL,mBAASR,EAAOJ,IAJd,mBAI3BkB,EAJ2B,KAIjBC,EAJiB,OAKAP,qBALA,mBAK3BQ,EAL2B,KAKhBC,EALgB,OAMRT,qBANQ,mBAM3BU,EAN2B,KAMpBC,EANoB,OAOZX,mBAAS,IAPG,mBAO3BzB,EAP2B,KAOtBqC,EAPsB,OAQNZ,mBAAS,GARH,mBAQ3BX,EAR2B,KAQnBwB,EARmB,OASIb,mBAAS,GATb,mBAS3Bc,EAT2B,KASdC,EATc,OAUMf,qBAVN,mBAU3BtB,EAV2B,KAUbsC,EAVa,KA2FlC,OA/EAC,qBAAU,WACJd,GAAeF,IACjBU,EACEO,aAAY,WACV,IAAMC,EACJ/B,EAAc,EACVgC,KAAKC,MAAQb,EAAYpB,EACzBgC,KAAKC,MAAQb,EACnBH,EAAec,KACd,KAELf,GAAe,MAEhB,CAACH,EAAWE,IAEfc,qBAAU,WACRV,EAAYf,EAAOJ,IACnByB,EAAUzB,EAAc0B,KACvB,CAAC1B,IAEJ6B,qBAAU,WAER,IAGInC,EAAWG,EAHXqC,EAAU,SACVC,EAAW,EAITC,EAAU,YAAOjD,GAEvBiD,EAAWC,UAEPD,EAAW7C,OAAS,GACtB6C,EAAWE,SAAQ,SAAAhC,GAAM,IACf3B,EAAc2B,EAAErC,KAAhBU,UAEJA,GAAauD,IACfA,EAAUvD,EACVe,EAAYY,EAAEjB,OAGZV,GAAawD,IACfA,EAAWxD,EACXkB,EAAaS,EAAEjB,UAKrBuC,EAAgB,CACdpC,KAAM,CAAEvB,KAAMiE,EAAS7C,MAAOK,GAC9BC,MAAO,CAAE1B,KAAMkE,EAAU9C,MAAOQ,OAEjC,CAACV,IA6BF,kBAACxB,EAAD,CAAWK,QAAS6C,GAAa,KAAM9C,QAASiC,EAAc,GAAK,MACjE,8BACE,yBAAKG,GAAG,aACN,4BACGe,EAAStC,QADZ,IACsBsC,EAASrC,QAD/B,IACyCqC,EAASpC,cAGpD,yBAAKqB,GAAG,WACN,yBAAKD,UAAU,cACb,4BAAQqC,KAAK,SAASC,QAAS3B,EAfzC,WACEW,EAAO,CAAC,CAAEnC,MAAOF,EAAII,OAAS,EAAGtB,KAAMmC,EAAOH,KAAxC,mBAAsDd,KAC5DwC,EAAe3B,IAZjB,WACEyC,cAAcnB,GACdL,EAAe,GACfO,EAAO,IACPC,EAAU,GACVE,EAAe,GACfb,GAAa,GACbE,GAAe,KAmBJH,EAAY,MAAQb,EAAc,EAAI,QAAU,QAGrD,yBAAKE,UAAU,eACb,4BAAQqC,KAAK,SAASC,QAAS3B,EAnCzC,WACEC,GAAa,GACb2B,cAAcnB,IARhB,WACER,GAAa,GACbO,EAAaW,KAAKC,OAClBjB,GAAe,KAuCJH,EAAY,OAAS,WAK5B,yBAAKV,GAAG,QACN,kBAACJ,EAAD,CACEC,YAAaA,EACbb,IAAKA,EACLc,OAAQA,EACRX,aAAcH,EAAII,OAAS,GAAKD,SDlHxC,OAEFoD,SAASC,eAAe,W","file":"static/js/main.2c14e62e.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 5px;\r\n  margin: 0 auto;\r\n\r\n  main {\r\n    max-width: 800px;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n\r\n\r\n    #stopwatch {\r\n      color: #ffffff;\r\n      margin-bottom: 60px;\r\n      /* text-align: center; */\r\n      padding-left: 35px;\r\n\r\n      h1 {\r\n        font-weight: normal;\r\n        font-size: 85px;\r\n        /* font-family: ; */\r\n      }\r\n    }\r\n\r\n    #buttons {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      padding: 0 25px;\r\n      margin-top: 15px;\r\n\r\n      div {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        button {\r\n          width: 70px;\r\n          height: 70px;\r\n          border-radius: 50%;\r\n          border: 2px solid black;\r\n        }\r\n      }\r\n\r\n      div.leftButton {\r\n        button {\r\n          background-color: ${props => props.reseted === 'no' ? '#333333' : '#1C1C1E'};\r\n          color: ${props => props.reseted === 'no' ? '#ffffff' : '#999999'};\r\n          font-weight: 500;\r\n          box-shadow: 0px 0px 0px 2px ${props => props.reseted === 'no' ? '#333333' : '#1C1C1E'} ;\r\n\r\n          :active {\r\n          background-color: ${props => props.reseted === 'no' ? '#1B1B1B' : '#0F0F11'};\r\n            box-shadow: 0px 0px 0px 2px ${props => props.reseted === 'no' ? '#1B1B1B' : '#0F0F11'};\r\n          }\r\n        }\r\n      }\r\n\r\n      div.rightButton {\r\n        button {\r\n          background-color: ${props => props.running === 'on' ? '#330000' : '#003300'};\r\n          color: ${props => props.running === 'on' ? '#cc6633' : '#66cc66'};\r\n          font-weight: 500;\r\n          box-shadow: 0px 0px 0px 2px ${props => props.running === 'on' ? '#330000' : '#003300'};\r\n        }\r\n      }\r\n    }\r\n\r\n    #laps {\r\n      margin-top: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n","export default function(time) {\r\n  const allSec = time / 1000;\r\n  const min = Math.floor(allSec / 60);\r\n  const sec = Math.floor(allSec % 60);\r\n  const msec = (allSec % 1).toFixed(2).substring(2);\r\n\r\n  let allData = {\r\n    totalTime: allSec,\r\n    minutes: min >= 10 ? min : `0${min}`,\r\n    seconds: sec >= 10 ? sec : `0${sec}`,\r\n    miliseconds: msec,\r\n  };\r\n\r\n  allData.formatedTime = `${allData.minutes}:${allData.seconds}.${allData.miliseconds}`;\r\n\r\n  return allData;\r\n}\r\n","import styled from 'styled-components';\r\nimport PerfectScrollBar from 'react-perfect-scrollbar';\r\n\r\nexport const Container = styled.div`\r\n  width: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 160px;\r\n\r\n  p {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    color: #ffffff;\r\n    width: 100%;\r\n    padding: 10px 0;\r\n    border: 1px solid #333333;\r\n    border-left: 0;\r\n    border-right: 0;\r\n\r\n    span {\r\n      height: 17px;\r\n    }\r\n  }\r\n  div + div {\r\n    p {\r\n      border: 1px solid #333333;\r\n      border-left: 0;\r\n      border-right: 0;\r\n      border-top: 0;\r\n    }\r\n  }\r\n\r\n  .first-line {\r\n    border-bottom: 0;\r\n  }\r\n\r\n  #lap-duration {\r\n    width: 60px;\r\n\r\n    span {\r\n      /* padding-left: 6px; */\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Scroll = styled(PerfectScrollBar)`\r\n  width: 100%;\r\n  padding: 0 20px;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  p {\r\n    color: ${props => {\r\n      const { lap, index: i, bestWorseLap } = props;\r\n\r\n      let color;\r\n\r\n      if (lap.length > 1 && lap[i]) {\r\n        const { time: bestTime, index: bestIndex } = bestWorseLap.best;\r\n        const { time: worseTime, index: worseIndex } = bestWorseLap.worse;\r\n\r\n        if (lap[i].index === bestIndex && lap[i].time.totalTime === bestTime){\r\n          color = '#3FB95D';\r\n        }\r\n        else if (\r\n          lap[i].index === worseIndex &&\r\n          lap[i].time.totalTime === worseTime\r\n        ) {\r\n          color = '#B93932';\r\n        }\r\n      }\r\n\r\n      return color;\r\n    }};\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Container } from './styles';\r\n\r\nexport default function Line({ index, lap, bestWorseLap }) {\r\n  return (\r\n    <Container index={index} lap={lap} bestWorseLap={bestWorseLap}>\r\n      <p>\r\n        <span>{lap[index] && `Lap ${lap[index].index}`}</span>\r\n        <span>{lap[index] && `${lap[index].time.formatedTime}`}</span>\r\n      </p>\r\n    </Container>\r\n  );\r\n}\r\n\r\nLine.propTypes = {\r\n  index: PropTypes.number,\r\n  lap: PropTypes.array,\r\n  bestWorseLap: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Container, Scroll } from './styles';\r\nimport Line from './Line';\r\nimport format from '~/services/format';\r\n\r\nexport default function Laps({ timeElapsed, lap, newLap, bestWorseLap }) {\r\n  return (\r\n    <Container>\r\n      <Scroll>\r\n        <p className=\"first-line\">\r\n          <span>{timeElapsed > 0 && `Lap ${lap.length + 1}`}</span>\r\n          <span id=\"lap-duration\">\r\n            {timeElapsed > 0 && <span>{format(newLap).formatedTime}</span>}\r\n          </span>\r\n        </p>\r\n        <Line index=\"0\" lap={lap} bestWorseLap={bestWorseLap} />\r\n        <Line index=\"1\" lap={lap} bestWorseLap={bestWorseLap} />\r\n        <Line index=\"2\" lap={lap} bestWorseLap={bestWorseLap} />\r\n\r\n        {lap.length > 3 &&\r\n          lap.map(\r\n            (l, lIndex) =>\r\n              lIndex > 2 && (\r\n                <Line\r\n                  key={l.index}\r\n                  index={lIndex}\r\n                  lap={lap}\r\n                  bestWorseLap={bestWorseLap}\r\n                />\r\n              )\r\n          )}\r\n      </Scroll>\r\n    </Container>\r\n  );\r\n}\r\n\r\nLaps.propTypes = {\r\n  timeElapsed: PropTypes.number,\r\n  lap: PropTypes.array,\r\n  newLap: PropTypes.number,\r\n  bestWorseLap: PropTypes.object,\r\n};\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\n\r\nexport default createGlobalStyle`\r\n\r\n    *{\r\n        margin: 0;\r\n        padding: 0;\r\n        outline: 0;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    *:focus{\r\n        outline: 0;\r\n    }\r\n\r\n    html, body, #root {\r\n        height: 100%;\r\n    }\r\n\r\n    body{\r\n        -webkit-font-smoothing: antialiased;\r\n        background-color: #000000;\r\n    }\r\n\r\n    body, input, button {\r\n        font: 16px 'Roboto', sans-serif;\r\n    }\r\n\r\n    button{\r\n        cursor: pointer;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport StopWatch from './Components/StopWatch';\r\nimport Global from './styles/global';\r\n\r\nReactDOM.render(\r\n  <>\r\n    <Global />\r\n    <StopWatch />\r\n  </>,\r\n  document.getElementById('root')\r\n);\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Container } from './styles';\r\nimport format from '~/services/format';\r\nimport Laps from './Laps';\r\n\r\nexport default function StopWatch() {\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [newInterval, setNewInterval] = useState(false);\r\n  const [timeElapsed, setTimeElapsed] = useState(0);\r\n  const [duration, setDuration] = useState(format(timeElapsed));\r\n  const [startTime, setStartTime] = useState();\r\n  const [timer, setTimer] = useState();\r\n  const [lap, setLap] = useState([]);\r\n  const [newLap, setNewLap] = useState(0);\r\n  const [resetNewLap, setResetNewLap] = useState(0);\r\n  const [bestWorseLap, setBestWorseLap] = useState();\r\n\r\n  useEffect(() => {\r\n    if (newInterval && isRunning) {\r\n      setTimer(\r\n        setInterval(() => {\r\n          const tElapsed =\r\n            timeElapsed > 0\r\n              ? Date.now() - startTime + timeElapsed\r\n              : Date.now() - startTime;\r\n          setTimeElapsed(tElapsed);\r\n        }, 10)\r\n      );\r\n      setNewInterval(false);\r\n    }\r\n  }, [isRunning, newInterval]);\r\n\r\n  useEffect(() => {\r\n    setDuration(format(timeElapsed));\r\n    setNewLap(timeElapsed - resetNewLap);\r\n  }, [timeElapsed]);\r\n\r\n  useEffect(() => {\r\n    //infinity number\r\n    let bestLap = 1797693134862315e308;\r\n    let worseLap = 0;\r\n\r\n    let bestIndex, worseIndex;\r\n\r\n    const lapReverse = [...lap];\r\n\r\n    lapReverse.reverse();\r\n\r\n    if (lapReverse.length > 1) {\r\n      lapReverse.forEach(l => {\r\n        const { totalTime } = l.time;\r\n\r\n        if (totalTime <= bestLap) {\r\n          bestLap = totalTime;\r\n          bestIndex = l.index;\r\n        }\r\n\r\n        if (totalTime >= worseLap) {\r\n          worseLap = totalTime;\r\n          worseIndex = l.index;\r\n        }\r\n      });\r\n    }\r\n\r\n    setBestWorseLap({\r\n      best: { time: bestLap, index: bestIndex },\r\n      worse: { time: worseLap, index: worseIndex },\r\n    });\r\n  }, [lap]);\r\n\r\n  function start() {\r\n    setIsRunning(true);\r\n    setStartTime(Date.now());\r\n    setNewInterval(true);\r\n  }\r\n\r\n  function stop() {\r\n    setIsRunning(false);\r\n    clearInterval(timer);\r\n  }\r\n\r\n  function reset() {\r\n    clearInterval(timer);\r\n    setTimeElapsed(0);\r\n    setLap([]);\r\n    setNewLap(0);\r\n    setResetNewLap(0);\r\n    setIsRunning(false);\r\n    setNewInterval(true);\r\n  }\r\n\r\n  function createNewLap() {\r\n    setLap([{ index: lap.length + 1, time: format(newLap) }, ...lap]);\r\n    setResetNewLap(timeElapsed);\r\n  }\r\n\r\n  return (\r\n    <Container running={isRunning && 'on'} reseted={timeElapsed > 0 && 'no'}>\r\n      <main>\r\n        <div id=\"stopwatch\">\r\n          <h1>\r\n            {duration.minutes}:{duration.seconds}.{duration.miliseconds}\r\n          </h1>\r\n        </div>\r\n        <div id=\"buttons\">\r\n          <div className=\"leftButton\">\r\n            <button type=\"button\" onClick={isRunning ? createNewLap : reset}>\r\n              {isRunning ? 'Lap' : timeElapsed > 0 ? 'Reset' : 'Lap'}\r\n            </button>\r\n          </div>\r\n          <div className=\"rightButton\">\r\n            <button type=\"button\" onClick={isRunning ? stop : start}>\r\n              {isRunning ? 'Stop' : 'Start'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"laps\">\r\n          <Laps\r\n            timeElapsed={timeElapsed}\r\n            lap={lap}\r\n            newLap={newLap}\r\n            bestWorseLap={lap.length > 1 && bestWorseLap}\r\n          />\r\n        </div>\r\n      </main>\r\n    </Container>\r\n  );\r\n}\r\n"],"sourceRoot":""}