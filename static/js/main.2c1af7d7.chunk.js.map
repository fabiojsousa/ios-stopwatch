{"version":3,"sources":["pages/Home/styles.js","pages/Home/index.js","routes/index.js","styles/global.js","App.js","index.js"],"names":["Container","styled","div","Home","useState","isRunning","setIsRunning","timeElapsed","setTimeElapsed","startTime","setStartTime","timer","setTimer","lap","setLap","getUnits","seconds","min","Math","floor","toString","sec","msec","toFixed","substring","useEffect","Date","now","clearInterval","console","log","setInterval","tElapsed","id","type","onClick","map","l","key","Routes","path","exact","component","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"4rBAEO,IAAMA,EAAYC,IAAOC,IAAV,KCEP,SAASC,IAAQ,IAAD,EACKC,oBAAS,GADd,mBACtBC,EADsB,KACXC,EADW,OAESF,mBAAS,GAFlB,mBAEtBG,EAFsB,KAETC,EAFS,OAGKJ,qBAHL,mBAGtBK,EAHsB,KAGXC,EAHW,OAIHN,qBAJG,mBAItBO,EAJsB,KAIfC,EAJe,OAKPR,mBAAS,IALF,mBAKtBS,EALsB,KAKjBC,EALiB,KAiC7B,SAASC,IACP,IAAMC,EAAUT,EAAc,IAC9B,MAAO,CACLU,IAAKC,KAAKC,MAAMH,EAAU,IAAII,WAC9BC,IAAKH,KAAKC,MAAMH,EAAU,IAAII,WAC9BE,MAAON,EAAU,GAAGO,QAAQ,GAAGC,UAAU,IAS7C,OAxCAC,qBAAU,WACRpB,EAAYK,EAAagB,KAAKC,OAASC,cAAcjB,KACpD,CAACN,IAEJoB,qBAAU,WACJpB,IACFwB,QAAQC,IAAI,aACZlB,EACEmB,aAAY,WACVF,QAAQC,IAAI,eACZ,IAAME,EACJzB,EAAc,EACVmB,KAAKC,MAAQlB,EAAYF,EACzBmB,KAAKC,MAAQlB,EACnBD,EAAewB,KACd,QAGN,CAACvB,IAuBF,kBAACT,EAAD,KACE,yBAAKiC,GAAG,eACN,4BAAKlB,IAAWE,IAAhB,KACA,4BAAKF,IAAWM,IAAhB,KACA,4BAAKN,IAAWO,OAElB,6BACE,4BAAQY,KAAK,SAASC,QAAS,kBAAM7B,GAAcD,KAChDA,EAAY,OAAS,SAGxB,4BAAQ6B,KAAK,SAASC,QAAS9B,EAjBrC,WACES,EAAO,GAAD,mBAAKD,GAAL,CAAUN,KAChBsB,QAAQC,IAAIjB,IAjBd,WACEe,cAAcjB,GACdH,EAAe,GACfM,EAAO,MA8BAT,EAAY,MAAQ,UAGzB,yBAAK4B,GAAG,QACLpB,EAAIuB,KAAI,SAAAC,GAAC,OACR,uBAAGC,IAAKD,GAAR,IAAaA,EAAb,UC/DK,SAASE,IACtB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWvC,M,ytBCR1BwC,kBAAf,K,YCeeC,MATf,WACE,OACE,oCACE,kBAACL,EAAD,MACA,kBAAC,EAAD,QCRNM,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2c1af7d7.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n\r\n  div {\r\n    display: flex;\r\n    margin: 0 auto;\r\n    min-width: 100px;\r\n    align-items: center;\r\n    justify-content: center;\r\n    button {\r\n      padding: 5px 8px;\r\n    }\r\n    button + button {\r\n      margin-left: 10px;\r\n    }\r\n  }\r\n\r\n  #laps {\r\n    display: block;\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Container } from './styles';\r\n\r\nexport default function Home() {\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [timeElapsed, setTimeElapsed] = useState(0);\r\n  const [startTime, setStartTime] = useState();\r\n  const [timer, setTimer] = useState();\r\n  const [lap, setLap] = useState([]);\r\n\r\n  useEffect(() => {\r\n    isRunning ? setStartTime(Date.now()) : clearInterval(timer);\r\n  }, [isRunning]);\r\n\r\n  useEffect(() => {\r\n    if (isRunning) {\r\n      console.log('startTime');\r\n      setTimer(\r\n        setInterval(() => {\r\n          console.log('setInterval');\r\n          const tElapsed =\r\n            timeElapsed > 0\r\n              ? Date.now() - startTime + timeElapsed\r\n              : Date.now() - startTime;\r\n          setTimeElapsed(tElapsed);\r\n        }, 10)\r\n      );\r\n    }\r\n  }, [startTime]);\r\n\r\n  function reset() {\r\n    clearInterval(timer);\r\n    setTimeElapsed(0);\r\n    setLap([]);\r\n  }\r\n\r\n  function getUnits() {\r\n    const seconds = timeElapsed / 1000;\r\n    return {\r\n      min: Math.floor(seconds / 60).toString(),\r\n      sec: Math.floor(seconds % 60).toString(),\r\n      msec: (seconds % 1).toFixed(3).substring(2),\r\n    };\r\n  }\r\n\r\n  function createNewLap() {\r\n    setLap([...lap, timeElapsed]);\r\n    console.log(lap);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <div id=\"chronometer\">\r\n        <h2>{getUnits().min}:</h2>\r\n        <h2>{getUnits().sec}:</h2>\r\n        <h2>{getUnits().msec}</h2>\r\n      </div>\r\n      <div>\r\n        <button type=\"button\" onClick={() => setIsRunning(!isRunning)}>\r\n          {isRunning ? 'Stop' : 'Start'}\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={isRunning ? createNewLap : reset}>\r\n          {isRunning ? 'Lap' : 'Reset'}\r\n        </button>\r\n      </div>\r\n      <div id=\"laps\">\r\n        {lap.map(l => (\r\n          <p key={l}> {l} </p>\r\n        ))}\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from '../pages/Home';\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n      </Switch>\r\n    </HashRouter>\r\n  )\r\n}\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n    @import url('https://fonts.googleapis.com/css?family=Roboto:400,700&display=swap');\r\n    @import url('https://fonts.googleapis.com/icon?family=Material+Icons');\r\n\r\n    *{\r\n        margin: 0;\r\n        padding: 0;\r\n        outline: 0;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    *:focus{\r\n        outline: 0;\r\n    }\r\n\r\n    html, body, #root {\r\n        height: 100%;\r\n    }\r\n\r\n    body{\r\n      -webkit-font-smoothing: antialiased;\r\n    }\r\n\r\n    body, input, button {\r\n      font: 'Roboto', sans-serif;\r\n    }\r\n\r\n    a {\r\n        text-decoration: none;\r\n    }\r\n\r\n    ul{\r\n        list-style: none;\r\n    }\r\n\r\n    button {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n","import React from 'react';\r\n\r\nimport Routes from './routes';\r\n\r\nimport GlobalStyle from './styles/global';\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport 'materialize-css/dist/js/materialize.min.js';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Routes />\r\n      <GlobalStyle />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}